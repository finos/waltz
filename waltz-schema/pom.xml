<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Waltz - Enterprise Architecture
  ~ Copyright (C) 2016, 2017, 2018, 2019 Waltz open source project
  ~ See README.md for more information
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific
  ~
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>waltz</artifactId>
        <groupId>org.finos</groupId>
        <version>1.75-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>waltz-schema</artifactId>


    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M2</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireProperty>
                                    <property>database.url</property>
                                    <message>Property 'database.url' must be specified, usually via a profile in your settings.xml file. See https://github.com/finos/waltz/blob/master/docs/development/build.md for more information</message>
                                </requireProperty>
                                <requireProperty>
                                    <property>database.user</property>
                                    <message>Property 'database.user' must be specified, usually via a profile in your settings.xml file. See https://github.com/finos/waltz/blob/master/docs/development/build.md for more information</message>
                                </requireProperty>
                                <requireProperty>
                                    <property>jooq.group</property>
                                    <message>Property 'jooq.group' must be specified, usually by selecting one of the in-built profiles in the waltz-schema/pom.xml file. See https://github.com/finos/waltz/blob/master/docs/development/build.md for more information</message>
                                </requireProperty>
                                <requireProperty>
                                    <property>jdbc.driver</property>
                                    <message>Property 'jdbc.driver' must be specified, usually by selecting one of the in-built profiles in the waltz-schema/pom.xml file. See https://github.com/finos/waltz/blob/master/docs/development/build.md for more information</message>
                                </requireProperty>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.maven.version}</version>
                <configuration>
                    <changeLogFile>
                       src/main/resources/liquibase/db.changelog-master.xml
                    </changeLogFile>
                    <driver>${jdbc.driver}</driver>
                    <url>${database.url}</url>
                    <username>${database.user}</username>
                    <password>${database.password}</password>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                    <!--
                        Enable the `exclude-ft` context if testing with linux mssql image as full text not yet supported
                        <contexts>exclude-ft</contexts>
                    -->
                </configuration>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Specify the maven code generator plugin -->
                <groupId>${jooq.group}</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>${jdbc.group}</groupId>
                        <artifactId>${jdbc.artifact}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>

                <!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
                <configuration>

                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <driver>${jdbc.driver}</driver>
                        <url>${database.url}</url>
                        <user>${database.user}</user>
                        <password>${database.password}</password>
                    </jdbc>


                    <!-- Generator parameters -->
                    <generator>
                        <generate>
                            <javaTimeTypes>false</javaTimeTypes>
                        </generate>
                        <database>
                            <name>${jooq.database}</name>
                            <inputSchema>${database.schema}</inputSchema>
                            <inputCatalog>${database.catalog}</inputCatalog>
                            <outputSchemaToDefault>true</outputSchemaToDefault>
                        </database>

                        <target>
                            <packageName>org.finos.waltz.schema</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>liquibase-scripts</finalName>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>create-archive</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>